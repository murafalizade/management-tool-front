// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1.Data;

namespace WebApplication1.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("WebApplication1.Models.Adminstration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Adminstrations");
                });

            modelBuilder.Entity("WebApplication1.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AdminstrationId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AdminstrationId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("WebApplication1.Models.Discount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<double>("Chernobil")
                        .HasColumnType("float");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<double>("Desert")
                        .HasColumnType("float");

                    b.Property<double>("Disability")
                        .HasColumnType("float");

                    b.Property<int>("Dsmf")
                        .HasColumnType("int");

                    b.Property<double>("Food")
                        .HasColumnType("float");

                    b.Property<int>("HealthInjurance")
                        .HasColumnType("int");

                    b.Property<double>("Martyr")
                        .HasColumnType("float");

                    b.Property<double>("MinWage")
                        .HasColumnType("float");

                    b.Property<double>("Owner")
                        .HasColumnType("float");

                    b.Property<double>("Qachqin")
                        .HasColumnType("float");

                    b.Property<int>("TaxPercentage")
                        .HasColumnType("int");

                    b.Property<double>("Veteran")
                        .HasColumnType("float");

                    b.Property<double>("VeteranTaxDiscount")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Discounts");
                });

            modelBuilder.Entity("WebApplication1.Models.ElmiDerece", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("For10to15Salary")
                        .HasColumnType("int");

                    b.Property<int>("For15to20Salary")
                        .HasColumnType("int");

                    b.Property<int>("For20Salary")
                        .HasColumnType("int");

                    b.Property<int>("For5to10Salary")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ElmiDereces");
                });

            modelBuilder.Entity("WebApplication1.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CommandNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ElmiDereceId")
                        .HasColumnType("int");

                    b.Property<string>("EnteranceCommand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EnteranceDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExtraMoney")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExtraMoney2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FatherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FexriAdId")
                        .HasColumnType("int");

                    b.Property<string>("FexriAdName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InjuranceNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kesfiyyat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("MeharetDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MeharetId")
                        .HasColumnType("int");

                    b.Property<string>("Mexfilik")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PositionId")
                        .HasColumnType("int");

                    b.Property<int?>("RankId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Temsilcilik")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("XariciDilId")
                        .HasColumnType("int");

                    b.Property<string>("Zererlilik")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ElmiDereceId");

                    b.HasIndex("FexriAdId");

                    b.HasIndex("MeharetId");

                    b.HasIndex("PositionId");

                    b.HasIndex("RankId");

                    b.HasIndex("XariciDilId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("WebApplication1.Models.EmployeeSalaryRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Aliment")
                        .HasColumnType("float");

                    b.Property<double>("AlimentPercentage")
                        .HasColumnType("float");

                    b.Property<double>("BPM")
                        .HasColumnType("float");

                    b.Property<double>("BPMPercentage")
                        .HasColumnType("float");

                    b.Property<double>("CixisMuv")
                        .HasColumnType("float");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("DSMF")
                        .HasColumnType("float");

                    b.Property<int>("DiscountId")
                        .HasColumnType("int");

                    b.Property<double>("ElmiDerece")
                        .HasColumnType("float");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<double>("Extra211100")
                        .HasColumnType("float");

                    b.Property<double>("ExtraGivenMoney")
                        .HasColumnType("float");

                    b.Property<double>("ExtraMoney")
                        .HasColumnType("float");

                    b.Property<double>("ExtraMoney2")
                        .HasColumnType("float");

                    b.Property<double>("Ezamiyyet")
                        .HasColumnType("float");

                    b.Property<int>("FamilyCount")
                        .HasColumnType("int");

                    b.Property<double>("FexriAd")
                        .HasColumnType("float");

                    b.Property<double>("Food")
                        .HasColumnType("float");

                    b.Property<bool>("FoodGiven")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("HealthInsurance")
                        .HasColumnType("float");

                    b.Property<bool>("IsEternalQat")
                        .HasColumnType("bit");

                    b.Property<double>("KesfMezun")
                        .HasColumnType("float");

                    b.Property<double>("KesfXeste")
                        .HasColumnType("float");

                    b.Property<double>("Kesfiyyat")
                        .HasColumnType("float");

                    b.Property<double>("Kesirler")
                        .HasColumnType("float");

                    b.Property<double>("Kibertehlukesizlik")
                        .HasColumnType("float");

                    b.Property<int>("KirayeId")
                        .HasColumnType("int");

                    b.Property<double>("KirayePrice")
                        .HasColumnType("float");

                    b.Property<int>("KirayeQat")
                        .HasColumnType("int");

                    b.Property<double>("MaddiYardim")
                        .HasColumnType("float");

                    b.Property<double>("Meharetlilik")
                        .HasColumnType("float");

                    b.Property<double>("Mexfilik")
                        .HasColumnType("float");

                    b.Property<double>("Mezuniyyet")
                        .HasColumnType("float");

                    b.Property<double>("Muavin")
                        .HasColumnType("float");

                    b.Property<double>("PTMoney")
                        .HasColumnType("float");

                    b.Property<int>("PTQat")
                        .HasColumnType("int");

                    b.Property<double>("PositionSalary")
                        .HasColumnType("float");

                    b.Property<double>("RankSalary")
                        .HasColumnType("float");

                    b.Property<DateTime>("RecordDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Sehra")
                        .HasColumnType("float");

                    b.Property<double>("Tax")
                        .HasColumnType("float");

                    b.Property<double>("Temsilcilik")
                        .HasColumnType("float");

                    b.Property<double>("TotalDSMF")
                        .HasColumnType("float");

                    b.Property<int>("VeteranQat")
                        .HasColumnType("int");

                    b.Property<double>("XIMoney")
                        .HasColumnType("float");

                    b.Property<int>("XIPercent")
                        .HasColumnType("int");

                    b.Property<double>("XariciDil")
                        .HasColumnType("float");

                    b.Property<double>("YolXerci")
                        .HasColumnType("float");

                    b.Property<double>("YukPulu")
                        .HasColumnType("float");

                    b.Property<double>("Zererlilik")
                        .HasColumnType("float");

                    b.Property<bool>("isChernobil")
                        .HasColumnType("bit");

                    b.Property<bool>("isDisabled")
                        .HasColumnType("bit");

                    b.Property<bool>("isMatry")
                        .HasColumnType("bit");

                    b.Property<bool>("isNotGiven")
                        .HasColumnType("bit");

                    b.Property<bool>("isOwner")
                        .HasColumnType("bit");

                    b.Property<bool>("isQachqin")
                        .HasColumnType("bit");

                    b.Property<bool>("isVeteran")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("DiscountId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("KirayeId");

                    b.ToTable("EmployeeSalaryRecords");
                });

            modelBuilder.Entity("WebApplication1.Models.FexriAd", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Salary")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("FexriAds");
                });

            modelBuilder.Entity("WebApplication1.Models.Kiraye", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Kirayes");
                });

            modelBuilder.Entity("WebApplication1.Models.Meharet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ForGizirPercentage")
                        .HasColumnType("int");

                    b.Property<int>("ForMuddetliPercentage")
                        .HasColumnType("int");

                    b.Property<int>("ForZabitPercentage")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Meharets");
                });

            modelBuilder.Entity("WebApplication1.Models.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Salary")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("WebApplication1.Models.Rank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Salary")
                        .HasColumnType("int");

                    b.Property<string>("ShortName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ranks");
                });

            modelBuilder.Entity("WebApplication1.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.ToTable("AdminUsers");
                });

            modelBuilder.Entity("WebApplication1.Models.XariciDil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Percentage")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("XariciDils");
                });

            modelBuilder.Entity("WebApplication1.Models.Department", b =>
                {
                    b.HasOne("WebApplication1.Models.Adminstration", "Adminstration")
                        .WithMany("Departments")
                        .HasForeignKey("AdminstrationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Adminstration");
                });

            modelBuilder.Entity("WebApplication1.Models.Employee", b =>
                {
                    b.HasOne("WebApplication1.Models.ElmiDerece", "ElmiDerece")
                        .WithMany("Employees")
                        .HasForeignKey("ElmiDereceId");

                    b.HasOne("WebApplication1.Models.FexriAd", "FexriAd")
                        .WithMany()
                        .HasForeignKey("FexriAdId");

                    b.HasOne("WebApplication1.Models.Meharet", "Meharet")
                        .WithMany("Employees")
                        .HasForeignKey("MeharetId");

                    b.HasOne("WebApplication1.Models.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId");

                    b.HasOne("WebApplication1.Models.Rank", "Rank")
                        .WithMany()
                        .HasForeignKey("RankId");

                    b.HasOne("WebApplication1.Models.XariciDil", "XariciDil")
                        .WithMany()
                        .HasForeignKey("XariciDilId");

                    b.Navigation("ElmiDerece");

                    b.Navigation("FexriAd");

                    b.Navigation("XariciDil");

                    b.Navigation("Meharet");

                    b.Navigation("Position");

                    b.Navigation("Rank");
                });

            modelBuilder.Entity("WebApplication1.Models.EmployeeSalaryRecord", b =>
                {
                    b.HasOne("WebApplication1.Models.Discount", "Discount")
                        .WithMany("EmployeeSalaryRecords")
                        .HasForeignKey("DiscountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication1.Models.Employee", "Employee")
                        .WithMany("EmployeeSalaryRecords")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication1.Models.Kiraye", "Kiraye")
                        .WithMany("EmployeeSalaryRecord")
                        .HasForeignKey("KirayeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Discount");

                    b.Navigation("Employee");

                    b.Navigation("Kiraye");
                });

            modelBuilder.Entity("WebApplication1.Models.Position", b =>
                {
                    b.HasOne("WebApplication1.Models.Department", "Department")
                        .WithMany("Positions")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("WebApplication1.Models.Adminstration", b =>
                {
                    b.Navigation("Departments");
                });

            modelBuilder.Entity("WebApplication1.Models.Department", b =>
                {
                    b.Navigation("Positions");
                });

            modelBuilder.Entity("WebApplication1.Models.Discount", b =>
                {
                    b.Navigation("EmployeeSalaryRecords");
                });

            modelBuilder.Entity("WebApplication1.Models.ElmiDerece", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("WebApplication1.Models.Employee", b =>
                {
                    b.Navigation("EmployeeSalaryRecords");
                });

            modelBuilder.Entity("WebApplication1.Models.Kiraye", b =>
                {
                    b.Navigation("EmployeeSalaryRecord");
                });

            modelBuilder.Entity("WebApplication1.Models.Meharet", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
